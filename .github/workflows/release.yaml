name: Release Workflow

on:
  push:
    tags:
        - "*"
  workflow_dispatch:

jobs:
  golang:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: swapx-coprocessor
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Extract metadata from Git refs and GitHub events
        id: extract_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build machine image
        id: build_machine
        uses: docker/build-push-action@v6
        with:
          file: ./build/Dockerfile
          load: true
          builder: ${{ steps.setup_buildx.outputs.name }}
          tags: ${{ steps.extract_metadata.outputs.tags }}
          labels: ${{ steps.extract_metadata.outputs.labels }}
          annotations: ${{ steps.extract_metadata.outputs.annotations }}
          cache-from: type=gha,scope=cartesi-machine-image
          cache-to: type=gha,mode=max,scope=cartesi-machine-image

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  contracts:
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Forge version
        run: |
          forge --version

      - name: Run Forge build
        run: |
          forge build --sizes
        id: build
        working-directory: contracts

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test
        working-directory: contracts

  release:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          config: ../../.goreleaser.yml
          args: release --clean