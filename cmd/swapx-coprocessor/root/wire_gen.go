// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package root

import (
	"github.com/google/wire"
	"github.com/henriquemarlon/swapx/configs"
	"github.com/henriquemarlon/swapx/internal/domain"
	"github.com/henriquemarlon/swapx/internal/infra/cartesi"
	"github.com/henriquemarlon/swapx/internal/infra/repository"
	"github.com/henriquemarlon/swapx/internal/infra/service"
	"github.com/henriquemarlon/swapx/pkg/gio"
)

// Injectors from wire.go:

func NewMatchOrdersHandler(db *configs.InMemoryDB, rollupServerUrl string) (*cartesi.MatchOrdersHandler, error) {
	orderRepositoryInMemory := repository.NewOrderRepositoryInMemory(db)
	gioHandlerFactory := gio.NewGioHandlerFactory(rollupServerUrl)
	orderStorageService := service.NewOrderStorageService(gioHandlerFactory)
	matchOrdersHandler := cartesi.NewMatchOrdersHandler(orderRepositoryInMemory, orderStorageService)
	return matchOrdersHandler, nil
}

// wire.go:

var setHookStorageService = wire.NewSet(service.NewOrderStorageService, wire.Bind(new(service.OrderStorageServiceInterface), new(*service.OrderStorageService)))

var setGioHandlerFactory = wire.NewSet(gio.NewGioHandlerFactory)

var setOrderRepositoryDependency = wire.NewSet(repository.NewOrderRepositoryInMemory, wire.Bind(new(domain.OrderRepository), new(*repository.OrderRepositoryInMemory)))

var setMatchOrdersHandler = wire.NewSet(cartesi.NewMatchOrdersHandler)
